# Copy this file as `.env` and overwrite the variable values with yours
# After that, everything should be handled with `pdm`

# MANDATORY variables: always copy them and specify the variable value
# Path to the HOME directory in the host (for example)
# [UNIX] COMPOSE_HOME_DIR=/home/username
# [WINDOWS] COMPOSE_HOME_DIR="C:\Users\" # Pay attention to the backslashes as this gets injected to Docker Compose
COMPOSE_HOME_DIR=/home
# Path to the directory where data can be cached
COMPOSE_CACHE_DIR=/tmp
# Path to the directory where data / models / experiments are stored
COMPOSE_DATA_DIR=/data
# For SSH containers, the port to expose the new container
COMPOSE_SSH_PORT=
# Path to the directory where the code is stored
COMPOSE_CODE_DIR=.

# OPTIONAL variables: copy them only if you have to change the default value
# Or if you want to use them out of the `pdm` context like in VSCode devcontainers
# the type of container to build (options: ssh, linux, windows)
COMPOSE_PLATFORM=ssh
# your username in the host
COMPOSE_USER_NAME=<YOUR_USER_NAME>
# your uid (id -u)
COMPOSE_USER_UID=<YOUR_USER_UID>
# your group name in the host
COMPOSE_GROUP_NAME=<YOUR_GROUP_NAME>
# your group id (id -g)
COMPOSE_USER_GID=<YOUR_GROUP_ID>
# your shell in the container
COMPOSE_USER_SHELL=/bin/bash
# use docker buildkit to build the docker image
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1
# Use 'nvidia' if the host has GPUs, 'runc' otherwise
COMPOSE_RUNTIME=runc

# Whether the container is built on the CICD pipeline or not
CI=false

# The docker registry to pull/push images
# Use either elizaprodacreastus2.azurecr.io for prod or elizadevacreastus2.azurecr.io for develop
DOCKER_REGISTRY=elizaprodacreastus2.azurecr.io
# The version of the project. Defaults to the latest git tag
PROJECT_VERSION=
# The tag of the docker image. Defaults to 'latest'
# Only required if you want to use VSCode devcontainer to build the container
# If you use pdm run devcontainer, this variable is not required
# DOCKER_TAG=latest

# The username and password of the private NIQ PYPI repository
# Go to https://artifactory.adlm.nielseniq.com/ui, log in with your NIQ credentials
# On the upper right corner click on "Edit Profile" and then "Generate API Key"
# Copy that key and use it as password with your NIQ username
# WARNING! add them on your .bashrc or load this .env file in your terminal with
# > source .env
# Otherwise, pdm won't be able to read them to resolve sources in pyproject.toml
ARTIFACTORY_PYPI_USER=<YOUR_ARTIFACTORY_PYPI_USER>
ARTIFACTORY_PYPI_PASS=<YOUR_ARTIFACTORY_PYPI_API_TOKEN>
